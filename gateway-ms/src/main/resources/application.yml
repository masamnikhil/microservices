spring:
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
            - CustomFilter
            - name: CircuitBreaker
              args:
                name: user-service
                fallbackuri: forward:/userFallBack
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**
          filters:
            - CustomFilter
            - name: CircuitBreaker
              args:
                name: product-service
                fallbackuri: forward:/productFallBack
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/review/**
          filters:
            - CustomFilter
            - name: CircuitBreaker
              args:
                name: review-service
                fallbackuri: forward:/reviewFallBack
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:5173"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowedCredentials: true

hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000





eureka:
  instance:
    hostname: MasamNikhil.mshome.net
    prefer-ip-address: true
    ip-address: 127.0.0.1
    leaseRenewalIntervalInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 1
    initialInstanceInfoReplicationIntervalSeconds: 1


#resiliance
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        slidingWindowType: COUNT_BASED
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true

      product-service:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        slidingWindowType: COUNT_BASED
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true

      review-service:
        failureRateThreshold: 50
        waitDurationInOpenState: 5000
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true
     # time limiter configuration
  timelimiter:
    configs:
      default:
        timeoutDuration: 3s
        cancelRunningFuture: true
    instances:
      user-service:
        timeoutDuration: 3s
      product-service:
        timeoutDuration: 3s
   # retry configuration if service fails
  retry:
    instances:
      user-service:
        maxAttempts: 3
        waitDuration: 1000ms
        retryExceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.util.concurrent.TimeoutException
      product-service:
        maxAttempts: 3
        waitDuration: 1000ms
        retryExceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.util.concurrent.TimeoutException

  ratelimiter:
    instances:
      user-service:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
        timeoutDuration: 3s

logging:
  level:
    io.github.resilience4j.circuitbreaker: DEBUG
    io.github.resilience4j.retry: DEBUG
    io.github.resilience4j.timelimiter: DEBUG
    org.springframework.cloud.gateway: INFO
    reactor.netty.http.client: DEBUG



