spring:
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
            - CustomFilter
#            - name: Retry
#              args:
#                retries: 3
#                statuses:
#                  - INTERNAL_SERVER_ERROR
#                  - SERVICE_UNAVAILABLE
#                backoff:
#                  firstBackoff: 5000ms
#                timeout: 60000
            - name: CircuitBreaker
              args:
                name: user-service
                fallbackuri: forward:/userFallBack
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**
          filters:
            - CustomFilter
            - name: CircuitBreaker
              args:
                name: product-service
                fallbackuri: forward:/productFallBack
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/review/**
          filters:
            - CustomFilter
            - name: CircuitBreaker
              args:
                name: review-service
                fallbackuri: forward:/reviewFallBack
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:5173"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowedCredentials: true

hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000

#ribbon:
#  eureka:
#    enabled: true
#  ServerListRefreshInterval: 5000
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
#  ConnectTimeout: 10000
#  ReadTimeout: 10000




eureka:
  instance:
    hostname: MasamNikhil.mshome.net
    prefer-ip-address: true
    ip-address: 127.0.0.1
    leaseRenewalIntervalInSeconds: 3
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 1
    initialInstanceInfoReplicationIntervalSeconds: 1


#resiliance
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 10000
        slidingWindowSize: 10
        minimumNumberOfCalls: 1
        slidingWindowType: COUNT_BASED
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true
      product-service:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 5000
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
      review-service:
        failureRateThreshold: 50
        waitDurationInOpenState: 5000
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 5000
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true

resilience4j.retry:
  instances:
    user-service:
      maxAttempts: 3
      waitDuration: 1000ms



